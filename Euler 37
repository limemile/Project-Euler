def is_prime(n):
    '''check if integer n is a prime'''
    # make sure n is a positive integer
    n = abs(int(n))
    # 0 and 1 are not primes
    if n < 2:
        return False
    # 2 is the only even prime number
    if n == 2: 
        return True    
    # all other even numbers are not primes
    if not n & 1: 
        return False
    # range starts with 3 and only needs to go up the squareroot of n
    # for all odd numbers
    for x in range(3, int(n**0.5)+1, 2):
        if n % x == 0:
            return False
    return True
    
    
import re
n, f = 11, 1
tp = []

def is_trunc(n):
    for d in range(1, len(str(n))):
        if not is_prime(str(n)[d:]) or not is_prime(str(n)[:d]): 
            return False 
    return True

while len(tp) < 11:
    n += 3-f    # fast count for prime candidates
    f = -f
    if not (n > 100 and re.search('[245680]', str(n))):
        if is_prime(n) and is_trunc(n):
            tp.append(n)

print ("Project Euler 37 Solution =", sum(tp),  tp)
